{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"recent notes lang data requirements other projects Low-code API layer for RDBMS Low-code follow inspiration at first, not commerce the list of great people, who maintain mostly private blogs and writes consisting articles whithout beating the air (hello medium): Chris Moffitt at Practical Business Python blog where he collects and spreads ideas on how to use python more effectively in the business setting Justin Mitchel at Coding For Entrepreneurs blog where he shares tech.recipes and provides advices Matt Makai at Full Stack Python as an open source book that explains technical concepts in plain language","title":"main()"},{"location":"#recent","text":"","title":"recent"},{"location":"#notes","text":"lang data requirements other","title":"notes"},{"location":"#projects","text":"Low-code API layer for RDBMS Low-code","title":"projects"},{"location":"#follow-inspiration-at-first-not-commerce","text":"the list of great people, who maintain mostly private blogs and writes consisting articles whithout beating the air (hello medium): Chris Moffitt at Practical Business Python blog where he collects and spreads ideas on how to use python more effectively in the business setting Justin Mitchel at Coding For Entrepreneurs blog where he shares tech.recipes and provides advices Matt Makai at Full Stack Python as an open source book that explains technical concepts in plain language","title":"follow inspiration at first, not commerce"},{"location":"data/","text":"data Encoding Categorical Values Random Forest Linear regression","title":"data"},{"location":"data/#data","text":"Encoding Categorical Values Random Forest Linear regression","title":"data"},{"location":"lang/","text":"lang CTypes. Calling C function from Python If you need to call C function without modifying C source files then try CTypes module that provides C compatible data types and functions to load DLLs Generators PyPy","title":"lang"},{"location":"lang/#lang","text":"CTypes. Calling C function from Python If you need to call C function without modifying C source files then try CTypes module that provides C compatible data types and functions to load DLLs Generators PyPy","title":"lang"},{"location":"other/","text":"other VS Code: \"script.ps cannot be loaded\" Bypass PowerShell execution policy Python extensions with Rust","title":"other"},{"location":"other/#other","text":"VS Code: \"script.ps cannot be loaded\" Bypass PowerShell execution policy Python extensions with Rust","title":"other"},{"location":"2020/12-vs_code-ps_cannot_be_loaded/","text":"VS Code: \"script.ps cannot be loaded\" VS Code > PowerShell terminal says: .\\script.ps cannot be loaded because running scripts is disabled on this system when trying to execute PS script. solve it In VS Code open Command Palette ( Ctrl + Shift + P ) Type in Open Settings (JSON) Set terminal.integrated.shellArgs.windows value: \"terminal.integrated.shellArgs.windows\": [\"-ExecutionPolicy\", \"Bypass\"], or ignore Use standard Command Prompt ( cmd.exe ) instead. going deeper Generally speaking, this behaviour is caused by PowerShell Execution Policy but not by VS Code itself.","title":"VS Code: PS can't be loaded"},{"location":"2020/12-vs_code-ps_cannot_be_loaded/#vs-code-scriptps-cannot-be-loaded","text":"VS Code > PowerShell terminal says: .\\script.ps cannot be loaded because running scripts is disabled on this system when trying to execute PS script.","title":"VS Code: \"script.ps cannot be loaded\""},{"location":"2020/12-vs_code-ps_cannot_be_loaded/#solve-it","text":"In VS Code open Command Palette ( Ctrl + Shift + P ) Type in Open Settings (JSON) Set terminal.integrated.shellArgs.windows value: \"terminal.integrated.shellArgs.windows\": [\"-ExecutionPolicy\", \"Bypass\"],","title":"solve it"},{"location":"2020/12-vs_code-ps_cannot_be_loaded/#or-ignore","text":"Use standard Command Prompt ( cmd.exe ) instead.","title":"or ignore"},{"location":"2020/12-vs_code-ps_cannot_be_loaded/#going-deeper","text":"Generally speaking, this behaviour is caused by PowerShell Execution Policy but not by VS Code itself.","title":"going deeper"},{"location":"2021/02-Python_CTypes/","text":"CTypes. Call C function from Python If you need to call C function without modifying C source files then try CTypes module. CTypes module provides C compatible data types and functions to load DLLs so that calls can be made to C shared libraries without having to modify them. Prepare .so (shared object) file Consider the following example of lib.c : #include <stdio.h> void alert(char message[20]) { printf(\"\\nAlert: %s\\n\", message); } float add_nums(int num1, float num2) { return num1 + num2; } Generate a shared library by compiling C code with the -fPIC flag (position independent code): gcc -c -fPIC lib.c -o lib.o gcc lib.o -shared -o lib.so or simply: gcc -shared -o lib.so -fPIC lib.c Also you may want to use the following flags: -Wall to get all warnings -g to get debugging information Calling from .py code Consider the following example of call_cfunc.py : from ctypes import * #load the shared object file lib = CDLL('./lib.so') # passing a string lib.alert(create_string_buffer(b\"calling function\", 20)) # passing int and float a = c_int(10) b = c_float(10.23) add_nums = lib.add_nums add_nums.restype = c_float print(\"Sum of nums: {:.2f}\".format(add_nums(a, b))) Execute: $ python call_cfunc.py Alert: calling function Sum of nums: 20.23 Going deeper CTypes library - docs.python.org CTypes compatible data types - docs.python.og","title":"CTypes. Call C function from Python"},{"location":"2021/02-Python_CTypes/#ctypes-call-c-function-from-python","text":"If you need to call C function without modifying C source files then try CTypes module. CTypes module provides C compatible data types and functions to load DLLs so that calls can be made to C shared libraries without having to modify them.","title":"CTypes. Call C function from Python"},{"location":"2021/02-Python_CTypes/#prepare-so-shared-object-file","text":"Consider the following example of lib.c : #include <stdio.h> void alert(char message[20]) { printf(\"\\nAlert: %s\\n\", message); } float add_nums(int num1, float num2) { return num1 + num2; } Generate a shared library by compiling C code with the -fPIC flag (position independent code): gcc -c -fPIC lib.c -o lib.o gcc lib.o -shared -o lib.so or simply: gcc -shared -o lib.so -fPIC lib.c Also you may want to use the following flags: -Wall to get all warnings -g to get debugging information","title":"Prepare .so (shared object) file"},{"location":"2021/02-Python_CTypes/#calling-from-py-code","text":"Consider the following example of call_cfunc.py : from ctypes import * #load the shared object file lib = CDLL('./lib.so') # passing a string lib.alert(create_string_buffer(b\"calling function\", 20)) # passing int and float a = c_int(10) b = c_float(10.23) add_nums = lib.add_nums add_nums.restype = c_float print(\"Sum of nums: {:.2f}\".format(add_nums(a, b))) Execute: $ python call_cfunc.py Alert: calling function Sum of nums: 20.23","title":"Calling from .py code"},{"location":"2021/02-Python_CTypes/#going-deeper","text":"CTypes library - docs.python.org CTypes compatible data types - docs.python.og","title":"Going deeper"},{"location":"2021/Python_Generators/","text":"Generators First lets understand iterators. According to Wikipedia, an iterator is an object that enables a programmer to traverse a container, particularly lists. However, an iterator performs traversal and gives access to data elements in a container, but does not perform iteration. You might be confused so lets take it a bit slow. There are three parts namely: Iterable Iterator Iteration All of these parts are linked to each other. We will discuss them one by one and later talk about generators. 3.1. Iterable An iterable is any object in Python which has an __iter__ or a __getitem__ method defined which returns an iterator or can take indexes (You can read more about them here). In short an iterable is any object which can provide us with an iterator. So what is an iterator? rm Click to expand! ## Heading 1. A numbered 2. list * With some * Sub bullets This is a *Markdown* Paragraph. # A header. A *Markdown* paragraph. * A list item. * A second list item. Summary Here's some content. Summary Here's some content.","title":"Generators"},{"location":"2021/Python_Generators/#generators","text":"First lets understand iterators. According to Wikipedia, an iterator is an object that enables a programmer to traverse a container, particularly lists. However, an iterator performs traversal and gives access to data elements in a container, but does not perform iteration. You might be confused so lets take it a bit slow. There are three parts namely: Iterable Iterator Iteration All of these parts are linked to each other. We will discuss them one by one and later talk about generators.","title":"Generators"},{"location":"2021/Python_Generators/#31-iterable","text":"An iterable is any object in Python which has an __iter__ or a __getitem__ method defined which returns an iterator or can take indexes (You can read more about them here). In short an iterable is any object which can provide us with an iterator. So what is an iterator?","title":"3.1. Iterable"},{"location":"2021/Python_Generators/#rm","text":"Click to expand! ## Heading 1. A numbered 2. list * With some * Sub bullets This is a *Markdown* Paragraph. # A header. A *Markdown* paragraph. * A list item. * A second list item. Summary Here's some content. Summary Here's some content.","title":"rm"}]}